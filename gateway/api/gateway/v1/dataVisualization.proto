syntax = "proto3";

package api.gateway.v1;

import "google/api/annotations.proto";
//import "google/protobuf/any.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "tagger/tagger.proto";
import "api/common/common.proto";

option go_package = "gateway/api/gateway/v1;v1";

// Default settings for generating swagger documents
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  host: "127.0.0.1:8080"
  base_path: ""
  info: {
    title: "inner_core api docs";
    version: "2.0";
  }
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "BearerAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
        description: "Input a \"Bearer your-jwt-token\" to Value";
      }
    }
  }
};


service DataVisualization {

  //设备数据查询
  rpc DeviceDataGet(DeviceDataGetReq) returns (DeviceDataGetRes){
    option (google.api.http) = {
              post: "/api/v1/dataVisualization/getDeviceData"
              body: "*"
            };
            option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
              summary: "查询设备数据",
              description: "本接口为查询设备数据接口",
            };
  };

   // 设备数据推送
      rpc DeviceDataPush(DeviceDataPushReq) returns (DeviceDataPushRes) {
        option (google.api.http) = {
                                                                     get: "/api/v1/device/dataPush"
                                                                   };
                                                                   option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
                                                                     summary: "设备数据推送",
                                                                     description: "本接口为设备数据推送接口",
                                                                   };
      }

      //折线图，当天，七天，近一个月
        rpc DeviceDataCurve(DeviceDataCurveReq) returns (DeviceDataCurveRes){
        option (google.api.http) = {
                                                                             post: "/api/v1/dataVisualization/chart"
                                                                           };
                                                                           option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
                                                                             summary: "设备数据可视化",
                                                                             description: "本接口为设备数据可视化接口",
                                                                           };
        };

}

message DeviceDataGetReq {
  // 1. 设备名称
  string name = 1;
  // 2. 设备编号
  string code = 2;
  // 3. 页大小
  uint64 pageSize = 3;
  // 4. 开始时间
  string startTime = 4;
  // 5. 结束时间
  string endTime = 5;
  // 6. 页码
  uint64 currPage = 6;
  // 7. 用户ID
  uint64 userId = 7;
}



message DeviceDataGetRes {
  // 1. 设备名称
  string name = 1;
  // 2. 设备编号
  string code = 2;
  // 3. 设备数据
  repeated common.DeviceData data = 3;
  // 4. 数据量
  uint64 count = 4;
}

message DeviceDataPushReq {
  // 1. 设备编号
  string code = 1;
}

message DeviceDataPushRes {
  // 1. 设备名称
  string name = 1;
  // 2. 设备编号
  string code = 2;
  // 3. 设备数据
  repeated common.DataDetail data = 3;
}


enum IntervalType{
  // 1. 空
  Null = 0;
  // 2. 天
  Day = 1;
  // 3. 星期
  Week = 2;
  // 4 . 月
  Month = 3;
}

enum ChartType {
  // 1. 空
  ChartTypeNull = 0;
  // 1.饼图
  Pip = 1;
  // 2.折线图
  Line = 2;
}

message DeviceDataCurveReq{
  // 1. 用户ID
  uint64 userId = 1;
  // 2. 设备编号
  string deviceCode = 2;
  // 3. 时间间隔
  IntervalType interval = 3;
  // 4. 图类型
  repeated ChartType chartType = 4;
}


message DataLine {
   //1. 名称
   repeated string key = 1;
   //2. 值
   repeated float value = 2;
}

message DeviceDataCurveRes {
   //1. 近一个月数据量
   DataLine month = 1;
   //2. 饼图
   DataLine pip = 2;
   //3. 折线图
   DataLine line = 3;
   //4. 电流
   DataLine elect = 4;
   //5. 电压
   DataLine volt = 5;
}