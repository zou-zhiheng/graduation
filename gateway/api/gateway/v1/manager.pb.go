// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.9.0
// source: api/gateway/v1/manager.proto

package v1

import (
	common "gateway/api/common"
	
	
	
	
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 账户
	Account string `protobuf:"bytes,3,opt,name=account,proto3" json:"account"`
	// 4. 头像地址
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl"`
	// 5. 是否启用
	IsValid uint32 `protobuf:"varint,5,opt,name=isValid,proto3" json:"isValid"`
	// 6. 性别
	Sex string `protobuf:"bytes,6,opt,name=sex,proto3" json:"sex"`
	// 7. 电话号码
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone"`
	// 8. roleID
	RoleId uint64 `protobuf:"varint,8,opt,name=roleId,proto3" json:"roleId"`
	// 9. 密码
	Password string `protobuf:"bytes,9,opt,name=password,proto3" json:"password"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *User) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *User) GetIsValid() uint32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *User) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 登录请求参数
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 账户
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account"`
	// 2. 密码
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{1}
}

func (x *LoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 登录响应参数
type LoginRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token"`
	// 2. 用户
	User *User `protobuf:"bytes,2,opt,name=user,proto3" json:"user"`
}

func (x *LoginRes) Reset() {
	*x = LoginRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRes) ProtoMessage() {}

func (x *LoginRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRes.ProtoReflect.Descriptor instead.
func (*LoginRes) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginRes) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// 用户注册请求参数
type UserRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 账户
	Account string `protobuf:"bytes,3,opt,name=account,proto3" json:"account"`
	// 4. 头像地址
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl"`
	// 5. 是否启用
	IsValid uint32 `protobuf:"varint,5,opt,name=isValid,proto3" json:"isValid"`
	// 6. 性别
	Sex string `protobuf:"bytes,6,opt,name=sex,proto3" json:"sex"`
	// 7. 电话号码
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone"`
	// 8. roleIDs
	RoleIds []uint64 `protobuf:"varint,8,rep,packed,name=roleIds,proto3" json:"roleIds"`
	// 9. 密码
	Password string `protobuf:"bytes,9,opt,name=password,proto3" json:"password"`
}

func (x *UserRegisterReq) Reset() {
	*x = UserRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterReq) ProtoMessage() {}

func (x *UserRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterReq.ProtoReflect.Descriptor instead.
func (*UserRegisterReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{3}
}

func (x *UserRegisterReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserRegisterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserRegisterReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserRegisterReq) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserRegisterReq) GetIsValid() uint32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *UserRegisterReq) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *UserRegisterReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserRegisterReq) GetRoleIds() []uint64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *UserRegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 用户查询请求参数
type UserGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 手机号
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone"`
	// 4. 页码
	CurrPage uint64 `protobuf:"varint,4,opt,name=currPage,proto3" json:"currPage"`
	// 5. 页大小
	PageSize uint64 `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize"`
	// 6. 开始时间
	StartTime string `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime"`
	// 7. 结束时间
	EndTime string `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime"`
}

func (x *UserGetReq) Reset() {
	*x = UserGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetReq) ProtoMessage() {}

func (x *UserGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetReq.ProtoReflect.Descriptor instead.
func (*UserGetReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{4}
}

func (x *UserGetReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserGetReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserGetReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserGetReq) GetCurrPage() uint64 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

func (x *UserGetReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserGetReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UserGetReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type UserGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  []*User `protobuf:"bytes,1,rep,name=user,proto3" json:"user"`
	Count uint64  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *UserGetRes) Reset() {
	*x = UserGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetRes) ProtoMessage() {}

func (x *UserGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetRes.ProtoReflect.Descriptor instead.
func (*UserGetRes) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{5}
}

func (x *UserGetRes) GetUser() []*User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserGetRes) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 用户修改请求参数
type UserUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 账户
	Account string `protobuf:"bytes,3,opt,name=account,proto3" json:"account"`
	// 4. 头像地址
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl"`
	// 5. 是否启用
	IsValid uint32 `protobuf:"varint,5,opt,name=isValid,proto3" json:"isValid"`
	// 6. 性别
	Sex string `protobuf:"bytes,6,opt,name=sex,proto3" json:"sex"`
	// 7. 电话号码
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone"`
	// 8. roleID
	RoleId []uint64 `protobuf:"varint,8,rep,packed,name=roleId,proto3" json:"roleId"`
}

func (x *UserUpdateReq) Reset() {
	*x = UserUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateReq) ProtoMessage() {}

func (x *UserUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateReq.ProtoReflect.Descriptor instead.
func (*UserUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{6}
}

func (x *UserUpdateReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserUpdateReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserUpdateReq) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserUpdateReq) GetIsValid() uint32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *UserUpdateReq) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *UserUpdateReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserUpdateReq) GetRoleId() []uint64 {
	if x != nil {
		return x.RoleId
	}
	return nil
}

// 用户密码重置请求参数
type ResetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 账户
	Account string `protobuf:"bytes,3,opt,name=account,proto3" json:"account"`
	// 4. 头像地址
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl"`
	// 5. 是否启用
	IsValid uint32 `protobuf:"varint,5,opt,name=isValid,proto3" json:"isValid"`
	// 6. 性别
	Sex string `protobuf:"bytes,6,opt,name=sex,proto3" json:"sex"`
	// 7. 电话号码
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone"`
	// 8. roleID
	RoleId uint64 `protobuf:"varint,8,opt,name=roleId,proto3" json:"roleId"`
	// 9. 密码
	Password string `protobuf:"bytes,9,opt,name=password,proto3" json:"password"`
}

func (x *ResetPasswordReq) Reset() {
	*x = ResetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordReq) ProtoMessage() {}

func (x *ResetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{7}
}

func (x *ResetPasswordReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResetPasswordReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResetPasswordReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ResetPasswordReq) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *ResetPasswordReq) GetIsValid() uint32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *ResetPasswordReq) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *ResetPasswordReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ResetPasswordReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *ResetPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 用户注销请求参数
type UserDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 账户
	Account string `protobuf:"bytes,3,opt,name=account,proto3" json:"account"`
	// 4. 头像地址
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl"`
	// 5. 是否启用
	IsValid uint32 `protobuf:"varint,5,opt,name=isValid,proto3" json:"isValid"`
	// 6. 性别
	Sex string `protobuf:"bytes,6,opt,name=sex,proto3" json:"sex"`
	// 7. 电话号码
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone"`
	// 8. roleID
	RoleId uint64 `protobuf:"varint,8,opt,name=roleId,proto3" json:"roleId"`
	// 9. 密码
	Password string `protobuf:"bytes,9,opt,name=password,proto3" json:"password"`
}

func (x *UserDeleteReq) Reset() {
	*x = UserDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteReq) ProtoMessage() {}

func (x *UserDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteReq.ProtoReflect.Descriptor instead.
func (*UserDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{8}
}

func (x *UserDeleteReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserDeleteReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserDeleteReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserDeleteReq) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserDeleteReq) GetIsValid() uint32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *UserDeleteReq) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *UserDeleteReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserDeleteReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UserDeleteReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 角色
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 编号
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
	// 4. 接口
	Apis []uint64 `protobuf:"varint,4,rep,packed,name=apis,proto3" json:"apis"`
	// 5. 描述
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{9}
}

func (x *Role) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Role) GetApis() []uint64 {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *Role) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 角色创建请求参数
type RoleCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 编号
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
	// 4. 接口
	Apis []uint64 `protobuf:"varint,4,rep,packed,name=apis,proto3" json:"apis"`
	// 5. 描述
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc"`
}

func (x *RoleCreateReq) Reset() {
	*x = RoleCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleCreateReq) ProtoMessage() {}

func (x *RoleCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleCreateReq.ProtoReflect.Descriptor instead.
func (*RoleCreateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{10}
}

func (x *RoleCreateReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleCreateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RoleCreateReq) GetApis() []uint64 {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *RoleCreateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 角色查询
type RoleGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 编号
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// 3. 名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// 4. 页码
	CurrPage uint64 `protobuf:"varint,4,opt,name=currPage,proto3" json:"currPage"`
	// 5. 页大小
	PageSize uint64 `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize"`
	// 6. 开始时间
	StartTime string `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime"`
	// 7. 结束时间
	EndTime string `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime"`
}

func (x *RoleGetReq) Reset() {
	*x = RoleGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetReq) ProtoMessage() {}

func (x *RoleGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetReq.ProtoReflect.Descriptor instead.
func (*RoleGetReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{11}
}

func (x *RoleGetReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleGetReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RoleGetReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleGetReq) GetCurrPage() uint64 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

func (x *RoleGetReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoleGetReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *RoleGetReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

// 角色查询响应参数
type RoleGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role  []*Role `protobuf:"bytes,1,rep,name=role,proto3" json:"role"`
	Count uint64  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *RoleGetRes) Reset() {
	*x = RoleGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGetRes) ProtoMessage() {}

func (x *RoleGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGetRes.ProtoReflect.Descriptor instead.
func (*RoleGetRes) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{12}
}

func (x *RoleGetRes) GetRole() []*Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RoleGetRes) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 角色修改
type RoleUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 编号
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
	// 4. 接口
	Apis []uint64 `protobuf:"varint,4,rep,packed,name=apis,proto3" json:"apis"`
	// 5. 描述
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc"`
}

func (x *RoleUpdateReq) Reset() {
	*x = RoleUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUpdateReq) ProtoMessage() {}

func (x *RoleUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{13}
}

func (x *RoleUpdateReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleUpdateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RoleUpdateReq) GetApis() []uint64 {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *RoleUpdateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 角色删除
type RoleDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 编号
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
	// 4. 接口
	Apis []uint64 `protobuf:"varint,4,rep,packed,name=apis,proto3" json:"apis"`
	// 5. 描述
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc"`
}

func (x *RoleDeleteReq) Reset() {
	*x = RoleDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDeleteReq) ProtoMessage() {}

func (x *RoleDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDeleteReq.ProtoReflect.Descriptor instead.
func (*RoleDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{14}
}

func (x *RoleDeleteReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleDeleteReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleDeleteReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RoleDeleteReq) GetApis() []uint64 {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *RoleDeleteReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 接口
type Api struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 路径
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	// 4. 方法
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method"`
	// 5. 描述
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc"`
}

func (x *Api) Reset() {
	*x = Api{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Api) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Api) ProtoMessage() {}

func (x *Api) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Api.ProtoReflect.Descriptor instead.
func (*Api) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{15}
}

func (x *Api) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Api) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Api) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Api) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Api) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 接口创建
type ApiCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 路径
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	// 4. 方法
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method"`
	// 5. 描述
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc"`
}

func (x *ApiCreateReq) Reset() {
	*x = ApiCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiCreateReq) ProtoMessage() {}

func (x *ApiCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiCreateReq.ProtoReflect.Descriptor instead.
func (*ApiCreateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{16}
}

func (x *ApiCreateReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiCreateReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ApiCreateReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiCreateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 接口查询
type ApiGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 路径
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	// 4. 方法
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method"`
	// 5. 页大小
	PageSize uint64 `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize"`
	// 6. 开始时间
	StartTime string `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime"`
	// 7. 结束时间
	EndTime string `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime"`
	// 8. 页码
	CurrPage uint64 `protobuf:"varint,8,opt,name=currPage,proto3" json:"currPage"`
}

func (x *ApiGetReq) Reset() {
	*x = ApiGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGetReq) ProtoMessage() {}

func (x *ApiGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGetReq.ProtoReflect.Descriptor instead.
func (*ApiGetReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{17}
}

func (x *ApiGetReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiGetReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiGetReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ApiGetReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiGetReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ApiGetReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ApiGetReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ApiGetReq) GetCurrPage() uint64 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

// 接口查询响应参数
type ApiGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api   []*Api `protobuf:"bytes,1,rep,name=api,proto3" json:"api"`
	Count uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *ApiGetRes) Reset() {
	*x = ApiGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiGetRes) ProtoMessage() {}

func (x *ApiGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiGetRes.ProtoReflect.Descriptor instead.
func (*ApiGetRes) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{18}
}

func (x *ApiGetRes) GetApi() []*Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *ApiGetRes) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 接口修改
type ApiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 路径
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	// 4. 方法
	Method string `protobuf:"bytes,4,opt,name=method,proto3" json:"method"`
	// 5. 描述
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc"`
}

func (x *ApiUpdateReq) Reset() {
	*x = ApiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiUpdateReq) ProtoMessage() {}

func (x *ApiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiUpdateReq.ProtoReflect.Descriptor instead.
func (*ApiUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{19}
}

func (x *ApiUpdateReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiUpdateReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ApiUpdateReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiUpdateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 接口删除
type ApiDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *ApiDeleteReq) Reset() {
	*x = ApiDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiDeleteReq) ProtoMessage() {}

func (x *ApiDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiDeleteReq.ProtoReflect.Descriptor instead.
func (*ApiDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{20}
}

func (x *ApiDeleteReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 操作响应参数，确认操作是否成功
type OperationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 状态
	Status uint32 `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
	// 2. 信息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *OperationRes) Reset() {
	*x = OperationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationRes) ProtoMessage() {}

func (x *OperationRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationRes.ProtoReflect.Descriptor instead.
func (*OperationRes) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{21}
}

func (x *OperationRes) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OperationRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 设备名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 设备编号
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
	// 4. 设备类型ID
	DeviceTypeId uint64 `protobuf:"varint,4,opt,name=deviceTypeId,proto3" json:"deviceTypeId"`
	// 5. 设备类型名称
	DeviceTypeName string `protobuf:"bytes,5,opt,name=deviceTypeName,proto3" json:"deviceTypeName"`
	// 6. 设备状态
	State uint32 `protobuf:"varint,6,opt,name=state,proto3" json:"state"`
	// 7. 心跳时间
	CheckTime float32 `protobuf:"fixed32,7,opt,name=checkTime,proto3" json:"checkTime"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{22}
}

func (x *Device) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Device) GetDeviceTypeId() uint64 {
	if x != nil {
		return x.DeviceTypeId
	}
	return 0
}

func (x *Device) GetDeviceTypeName() string {
	if x != nil {
		return x.DeviceTypeName
	}
	return ""
}

func (x *Device) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Device) GetCheckTime() float32 {
	if x != nil {
		return x.CheckTime
	}
	return 0
}

type DeviceCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// 2. 设备编号
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// 3. 设备类型编号
	DeviceTypeId uint64 `protobuf:"varint,3,opt,name=deviceTypeId,proto3" json:"deviceTypeId"`
	// 4. 心跳时间
	CheckTime float32 `protobuf:"fixed32,4,opt,name=checkTime,proto3" json:"checkTime"`
}

func (x *DeviceCreateReq) Reset() {
	*x = DeviceCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCreateReq) ProtoMessage() {}

func (x *DeviceCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCreateReq.ProtoReflect.Descriptor instead.
func (*DeviceCreateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{23}
}

func (x *DeviceCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceCreateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeviceCreateReq) GetDeviceTypeId() uint64 {
	if x != nil {
		return x.DeviceTypeId
	}
	return 0
}

func (x *DeviceCreateReq) GetCheckTime() float32 {
	if x != nil {
		return x.CheckTime
	}
	return 0
}

type DeviceGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// 2. 编号
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// 3. 协议
	Protocol string `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol"`
	// 4. 设备类型名称
	DeviceTypeName string `protobuf:"bytes,4,opt,name=deviceTypeName,proto3" json:"deviceTypeName"`
	// 5. 设备状态
	State string `protobuf:"bytes,5,opt,name=state,proto3" json:"state"`
	// 6. 页大小
	PageSize uint64 `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize"`
	// 7. 开始时间
	StartTime string `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime"`
	// 8. 结束时间
	EndTime string `protobuf:"bytes,8,opt,name=endTime,proto3" json:"endTime"`
	// 9. 页码
	CurrPage uint64 `protobuf:"varint,9,opt,name=currPage,proto3" json:"currPage"`
	// 10. 设备ID
	Id uint64 `protobuf:"varint,10,opt,name=id,proto3" json:"id"`
}

func (x *DeviceGetReq) Reset() {
	*x = DeviceGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGetReq) ProtoMessage() {}

func (x *DeviceGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceGetReq.ProtoReflect.Descriptor instead.
func (*DeviceGetReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{24}
}

func (x *DeviceGetReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceGetReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeviceGetReq) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *DeviceGetReq) GetDeviceTypeName() string {
	if x != nil {
		return x.DeviceTypeName
	}
	return ""
}

func (x *DeviceGetReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *DeviceGetReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DeviceGetReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DeviceGetReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DeviceGetReq) GetCurrPage() uint64 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

func (x *DeviceGetReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeviceGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备信息
	Device []*Device `protobuf:"bytes,1,rep,name=device,proto3" json:"device"`
	// 2. 数量
	Count uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *DeviceGetRes) Reset() {
	*x = DeviceGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceGetRes) ProtoMessage() {}

func (x *DeviceGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceGetRes.ProtoReflect.Descriptor instead.
func (*DeviceGetRes) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{25}
}

func (x *DeviceGetRes) GetDevice() []*Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *DeviceGetRes) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DeviceUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 设备名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 设备编号
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`
	// 4. 设备类型ID
	DeviceTypeId uint64 `protobuf:"varint,4,opt,name=deviceTypeId,proto3" json:"deviceTypeId"`
	// 5. 心跳时间
	CheckTime float32 `protobuf:"fixed32,5,opt,name=checkTime,proto3" json:"checkTime"`
}

func (x *DeviceUpdateReq) Reset() {
	*x = DeviceUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceUpdateReq) ProtoMessage() {}

func (x *DeviceUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceUpdateReq.ProtoReflect.Descriptor instead.
func (*DeviceUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{26}
}

func (x *DeviceUpdateReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceUpdateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeviceUpdateReq) GetDeviceTypeId() uint64 {
	if x != nil {
		return x.DeviceTypeId
	}
	return 0
}

func (x *DeviceUpdateReq) GetCheckTime() float32 {
	if x != nil {
		return x.CheckTime
	}
	return 0
}

type DeviceDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *DeviceDeleteReq) Reset() {
	*x = DeviceDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDeleteReq) ProtoMessage() {}

func (x *DeviceDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDeleteReq.ProtoReflect.Descriptor instead.
func (*DeviceDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{27}
}

func (x *DeviceDeleteReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeviceDataReceiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备数据，json格式
	Data []*common.DeviceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data"`
}

func (x *DeviceDataReceiveReq) Reset() {
	*x = DeviceDataReceiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceDataReceiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDataReceiveReq) ProtoMessage() {}

func (x *DeviceDataReceiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDataReceiveReq.ProtoReflect.Descriptor instead.
func (*DeviceDataReceiveReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{28}
}

func (x *DeviceDataReceiveReq) GetData() []*common.DeviceData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeviceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备类型ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 设备类型名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 简述
	Describe string `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe"`
}

func (x *DeviceType) Reset() {
	*x = DeviceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceType) ProtoMessage() {}

func (x *DeviceType) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceType.ProtoReflect.Descriptor instead.
func (*DeviceType) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{29}
}

func (x *DeviceType) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceType) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type DeviceTypeCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备类型名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// 2. 简述
	Describe string `protobuf:"bytes,2,opt,name=describe,proto3" json:"describe"`
}

func (x *DeviceTypeCreateReq) Reset() {
	*x = DeviceTypeCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeCreateReq) ProtoMessage() {}

func (x *DeviceTypeCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeCreateReq.ProtoReflect.Descriptor instead.
func (*DeviceTypeCreateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{30}
}

func (x *DeviceTypeCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceTypeCreateReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type DeviceTypeGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备类型名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// 2. 页大小
	PageSize uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize"`
	// 3. 开始时间
	StartTime string `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime"`
	// 4. 结束时间
	EndTime string `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime"`
	// 5. 页码
	CurrPage uint64 `protobuf:"varint,5,opt,name=currPage,proto3" json:"currPage"`
	// 6. 设备类型ID
	Id uint64 `protobuf:"varint,6,opt,name=id,proto3" json:"id"`
}

func (x *DeviceTypeGetReq) Reset() {
	*x = DeviceTypeGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeGetReq) ProtoMessage() {}

func (x *DeviceTypeGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeGetReq.ProtoReflect.Descriptor instead.
func (*DeviceTypeGetReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{31}
}

func (x *DeviceTypeGetReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceTypeGetReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DeviceTypeGetReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DeviceTypeGetReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DeviceTypeGetReq) GetCurrPage() uint64 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

func (x *DeviceTypeGetReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeviceTypeGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备类型信息
	DeviceType []*DeviceType `protobuf:"bytes,1,rep,name=deviceType,proto3" json:"deviceType"`
	// 2. 数量
	Count uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *DeviceTypeGetRes) Reset() {
	*x = DeviceTypeGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeGetRes) ProtoMessage() {}

func (x *DeviceTypeGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeGetRes.ProtoReflect.Descriptor instead.
func (*DeviceTypeGetRes) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{32}
}

func (x *DeviceTypeGetRes) GetDeviceType() []*DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return nil
}

func (x *DeviceTypeGetRes) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DeviceTypeUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备类型ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 设备类型名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 3. 简述
	Describe string `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe"`
}

func (x *DeviceTypeUpdateReq) Reset() {
	*x = DeviceTypeUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeUpdateReq) ProtoMessage() {}

func (x *DeviceTypeUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeUpdateReq.ProtoReflect.Descriptor instead.
func (*DeviceTypeUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{33}
}

func (x *DeviceTypeUpdateReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceTypeUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceTypeUpdateReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type DeviceTypeDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 设备类型ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *DeviceTypeDeleteReq) Reset() {
	*x = DeviceTypeDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeDeleteReq) ProtoMessage() {}

func (x *DeviceTypeDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeDeleteReq.ProtoReflect.Descriptor instead.
func (*DeviceTypeDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{34}
}

func (x *DeviceTypeDeleteReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UserDeviceCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 用户账号
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account"`
	// 2. 设备编号
	DeviceCode string `protobuf:"bytes,2,opt,name=deviceCode,proto3" json:"deviceCode"`
}

func (x *UserDeviceCreateReq) Reset() {
	*x = UserDeviceCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeviceCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeviceCreateReq) ProtoMessage() {}

func (x *UserDeviceCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeviceCreateReq.ProtoReflect.Descriptor instead.
func (*UserDeviceCreateReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{35}
}

func (x *UserDeviceCreateReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserDeviceCreateReq) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

type UserDeviceGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 用户名称
	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	// 2. 设备名称
	DeviceName string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName"`
	// 3. 设备编号
	DeviceCode string `protobuf:"bytes,3,opt,name=deviceCode,proto3" json:"deviceCode"`
	// 4. 页码
	CurrPage uint64 `protobuf:"varint,4,opt,name=currPage,proto3" json:"currPage"`
	// 5. 页大小
	PageSize uint64 `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize"`
	// 6. 开始时间
	StartTime string `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime"`
	// 7. 结束时间
	EndTime string `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime"`
}

func (x *UserDeviceGetReq) Reset() {
	*x = UserDeviceGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeviceGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeviceGetReq) ProtoMessage() {}

func (x *UserDeviceGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeviceGetReq.ProtoReflect.Descriptor instead.
func (*UserDeviceGetReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{36}
}

func (x *UserDeviceGetReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserDeviceGetReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *UserDeviceGetReq) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *UserDeviceGetReq) GetCurrPage() uint64 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

func (x *UserDeviceGetReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserDeviceGetReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UserDeviceGetReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type UserDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 用户设备信息ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 2. 用户名称
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName"`
	// 3. 设备名称
	DeviceName string `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName"`
	// 4. 设备编号
	DeviceCode string `protobuf:"bytes,4,opt,name=deviceCode,proto3" json:"deviceCode"`
	// 5. 创建时间
	CreateTime string `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime"`
}

func (x *UserDevice) Reset() {
	*x = UserDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDevice) ProtoMessage() {}

func (x *UserDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDevice.ProtoReflect.Descriptor instead.
func (*UserDevice) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{37}
}

func (x *UserDevice) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserDevice) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserDevice) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *UserDevice) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *UserDevice) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type UserDeviceGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. 用户设备信息
	UserDevice []*UserDevice `protobuf:"bytes,1,rep,name=userDevice,proto3" json:"userDevice"`
	// 2. 数量
	Count uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *UserDeviceGetRes) Reset() {
	*x = UserDeviceGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeviceGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeviceGetRes) ProtoMessage() {}

func (x *UserDeviceGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeviceGetRes.ProtoReflect.Descriptor instead.
func (*UserDeviceGetRes) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{38}
}

func (x *UserDeviceGetRes) GetUserDevice() []*UserDevice {
	if x != nil {
		return x.UserDevice
	}
	return nil
}

func (x *UserDeviceGetRes) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UserDeviceDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1. ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *UserDeviceDeleteReq) Reset() {
	*x = UserDeviceDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_v1_manager_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeviceDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeviceDeleteReq) ProtoMessage() {}

func (x *UserDeviceDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_v1_manager_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeviceDeleteReq.ProtoReflect.Descriptor instead.
func (*UserDeviceDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_v1_manager_proto_rawDescGZIP(), []int{39}
}

func (x *UserDeviceDeleteReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_api_gateway_v1_manager_proto protoreflect.FileDescriptor

var file_api_gateway_v1_manager_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x40,
	0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x4a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xe5, 0x01, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a,
	0x0a, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x0d, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x66,
	0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x61, 0x70,
	0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x6f, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x61,
	0x70, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xb4, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c,
	0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x0d,
	0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x04, 0x61, 0x70, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x6f, 0x0a,
	0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x61, 0x70, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x67,
	0x0a, 0x03, 0x41, 0x70, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x70, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xc9, 0x01, 0x0a, 0x09, 0x41, 0x70,
	0x69, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x09, 0x41, 0x70, 0x69, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x70, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x22, 0x1e, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x38, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xc0, 0x01, 0x0a, 0x06,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7b,
	0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x90, 0x02, 0x0a, 0x0c,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54,
	0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x22, 0x45, 0x0a, 0x13, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x64, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x13, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x32, 0xd6, 0x21, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x80, 0x01,
	0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x43, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x28, 0x12, 0x06, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95,
	0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0x12, 0xa0, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe6, 0xb3, 0xa8,
	0xe5, 0x86, 0x8c, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8,
	0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe6, 0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0xe6, 0x8e, 0xa5,
	0xe5, 0x8f, 0xa3, 0x12, 0x8f, 0x01, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22,
	0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x67, 0x65,
	0x74, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe6,
	0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0xe4, 0xb8, 0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0x9a, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01,
	0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xae, 0xe6,
	0x94, 0xb9, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0xe6, 0x8e, 0xa5, 0xe5,
	0x8f, 0xa3, 0x12, 0xb3, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3a, 0x12, 0x12,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe9, 0x87, 0x8d, 0xe7,
	0xbd, 0xae, 0x1a, 0x24, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe9, 0x87, 0x8d, 0xe7,
	0xbd, 0xae, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0x9a, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5,
	0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0xe4, 0xb8, 0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0x9a, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01,
	0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe5, 0x88, 0x9b, 0xe5,
	0xbb, 0xba, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba,
	0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x8e, 0xa5, 0xe5,
	0x8f, 0xa3, 0x12, 0x8f, 0x01, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x12, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x74,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe6, 0x9f,
	0xa5, 0xe8, 0xaf, 0xa2, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4,
	0xb8, 0xba, 0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe6, 0x8e,
	0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0x9a, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a,
	0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe4, 0xbf, 0xae, 0xe6, 0x94,
	0xb9, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe8,
	0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f,
	0xa3, 0x12, 0x9a, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x4f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x6f, 0x6c, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e,
	0x12, 0x0c, 0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x1e,
	0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe8, 0xa7, 0x92, 0xe8,
	0x89, 0xb2, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0x97,
	0x01, 0x0a, 0x09, 0x41, 0x70, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x4e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe6, 0x8e, 0xa5, 0xe5,
	0x8f, 0xa3, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5,
	0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe5, 0x88, 0x9b, 0xe5,
	0xbb, 0xba, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0x8b, 0x01, 0x0a, 0x06, 0x41, 0x70, 0x69,
	0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x69, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x22, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x65, 0x74, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f,
	0xa3, 0xe4, 0xb8, 0xba, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2,
	0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0x97, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x22, 0x4e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x92,
	0x41, 0x2e, 0x12, 0x0c, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9,
	0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe6, 0x8e,
	0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0x12, 0x97, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x4e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe6, 0x8e,
	0xa5, 0xe5, 0x8f, 0xa3, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe5, 0x88,
	0xa0, 0xe9, 0x99, 0xa4, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0xbe, 0x01, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x22, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x40, 0x12, 0x18, 0xe7, 0x94, 0xa8,
	0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe5,
	0x88, 0x9b, 0xe5, 0xbb, 0xba, 0x1a, 0x24, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0xe4, 0xb8, 0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe5,
	0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0xb9, 0x01, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x12, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x22, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x65,
	0x74, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x40, 0x12, 0x18, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe8,
	0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf,
	0xa2, 0x1a, 0x24, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf,
	0xa2, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0xb8, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22,
	0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3a, 0x12, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x24, 0xe6, 0x9c,
	0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6, 0x8e, 0xa5, 0xe5,
	0x8f, 0xa3, 0x12, 0xa0, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe5,
	0x88, 0x9b, 0xe5, 0xbb, 0xba, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0xe4, 0xb8, 0xba, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0x97, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x22,
	0x4e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x92, 0x41,
	0x2e, 0x12, 0x0c, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x1a,
	0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe8, 0xae, 0xbe,
	0xe5, 0xa4, 0x87, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12,
	0xa0, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22,
	0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01,
	0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe4, 0xbf, 0xae, 0xe6,
	0x94, 0xb9, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba,
	0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe4, 0xbf, 0xae, 0xe6, 0x94, 0xb9, 0xe6, 0x8e, 0xa5, 0xe5,
	0x8f, 0xa3, 0x12, 0xa0, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2e, 0x12, 0x0c, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe5,
	0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x1e, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0xe4, 0xb8, 0xba, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6,
	0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0xbb, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22,
	0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3a, 0x12, 0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4,
	0x87, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0x8e, 0xa5, 0xe6, 0x94, 0xb6, 0x1a, 0x24, 0xe6,
	0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe8, 0xae, 0xbe, 0xe5, 0xa4,
	0x87, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0x8e, 0xa5, 0xe6, 0x94, 0xb6, 0xe6, 0x8e, 0xa5,
	0xe5, 0x8f, 0xa3, 0x12, 0xb8, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x61, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01,
	0x2a, 0x92, 0x41, 0x3a, 0x12, 0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xb1, 0xbb, 0xe5,
	0x9e, 0x8b, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0x1a, 0x24, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5,
	0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xb1, 0xbb, 0xe5,
	0x9e, 0x8b, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0xb3,
	0x01, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74,
	0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x22, 0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3a, 0x12, 0x12, 0xe8, 0xae, 0xbe, 0xe5,
	0xa4, 0x87, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x1a, 0x24,
	0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe8, 0xae, 0xbe, 0xe5,
	0xa4, 0x87, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0xe6, 0x8e,
	0xa5, 0xe5, 0x8f, 0xa3, 0x12, 0xb8, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x61, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x3a, 0x12, 0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xb1, 0xbb,
	0xe5, 0x9e, 0x8b, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0x1a, 0x24, 0xe6, 0x9c, 0xac, 0xe6, 0x8e,
	0xa5, 0xe5, 0x8f, 0xa3, 0xe4, 0xb8, 0xba, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xb1, 0xbb,
	0xe5, 0x9e, 0x8b, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x12,
	0xb8, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x61, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22,
	0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3a,
	0x12, 0x12, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe5, 0x88,
	0xa0, 0xe9, 0x99, 0xa4, 0x1a, 0x24, 0xe6, 0x9c, 0xac, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe4,
	0xb8, 0xba, 0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe5, 0x88,
	0xa0, 0xe9, 0x99, 0xa4, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x42, 0xc2, 0x01, 0x5a, 0x19, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x92, 0x41, 0xa3, 0x01, 0x12, 0x1a, 0x0a, 0x13,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x70, 0x69, 0x20, 0x64,
	0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e,
	0x30, 0x2e, 0x31, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x5a, 0x4d, 0x0a, 0x4b, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x3d, 0x08, 0x02, 0x12, 0x28, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x61, 0x20, 0x22, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_gateway_v1_manager_proto_rawDescOnce sync.Once
	file_api_gateway_v1_manager_proto_rawDescData = file_api_gateway_v1_manager_proto_rawDesc
)

func file_api_gateway_v1_manager_proto_rawDescGZIP() []byte {
	file_api_gateway_v1_manager_proto_rawDescOnce.Do(func() {
		file_api_gateway_v1_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_gateway_v1_manager_proto_rawDescData)
	})
	return file_api_gateway_v1_manager_proto_rawDescData
}

var file_api_gateway_v1_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_api_gateway_v1_manager_proto_goTypes = []interface{}{
	(*User)(nil),                 // 0: api.gateway.v1.User
	(*LoginReq)(nil),             // 1: api.gateway.v1.LoginReq
	(*LoginRes)(nil),             // 2: api.gateway.v1.LoginRes
	(*UserRegisterReq)(nil),      // 3: api.gateway.v1.UserRegisterReq
	(*UserGetReq)(nil),           // 4: api.gateway.v1.UserGetReq
	(*UserGetRes)(nil),           // 5: api.gateway.v1.UserGetRes
	(*UserUpdateReq)(nil),        // 6: api.gateway.v1.UserUpdateReq
	(*ResetPasswordReq)(nil),     // 7: api.gateway.v1.ResetPasswordReq
	(*UserDeleteReq)(nil),        // 8: api.gateway.v1.UserDeleteReq
	(*Role)(nil),                 // 9: api.gateway.v1.Role
	(*RoleCreateReq)(nil),        // 10: api.gateway.v1.RoleCreateReq
	(*RoleGetReq)(nil),           // 11: api.gateway.v1.RoleGetReq
	(*RoleGetRes)(nil),           // 12: api.gateway.v1.RoleGetRes
	(*RoleUpdateReq)(nil),        // 13: api.gateway.v1.RoleUpdateReq
	(*RoleDeleteReq)(nil),        // 14: api.gateway.v1.RoleDeleteReq
	(*Api)(nil),                  // 15: api.gateway.v1.Api
	(*ApiCreateReq)(nil),         // 16: api.gateway.v1.ApiCreateReq
	(*ApiGetReq)(nil),            // 17: api.gateway.v1.ApiGetReq
	(*ApiGetRes)(nil),            // 18: api.gateway.v1.ApiGetRes
	(*ApiUpdateReq)(nil),         // 19: api.gateway.v1.ApiUpdateReq
	(*ApiDeleteReq)(nil),         // 20: api.gateway.v1.ApiDeleteReq
	(*OperationRes)(nil),         // 21: api.gateway.v1.OperationRes
	(*Device)(nil),               // 22: api.gateway.v1.Device
	(*DeviceCreateReq)(nil),      // 23: api.gateway.v1.DeviceCreateReq
	(*DeviceGetReq)(nil),         // 24: api.gateway.v1.DeviceGetReq
	(*DeviceGetRes)(nil),         // 25: api.gateway.v1.DeviceGetRes
	(*DeviceUpdateReq)(nil),      // 26: api.gateway.v1.DeviceUpdateReq
	(*DeviceDeleteReq)(nil),      // 27: api.gateway.v1.DeviceDeleteReq
	(*DeviceDataReceiveReq)(nil), // 28: api.gateway.v1.DeviceDataReceiveReq
	(*DeviceType)(nil),           // 29: api.gateway.v1.DeviceType
	(*DeviceTypeCreateReq)(nil),  // 30: api.gateway.v1.DeviceTypeCreateReq
	(*DeviceTypeGetReq)(nil),     // 31: api.gateway.v1.DeviceTypeGetReq
	(*DeviceTypeGetRes)(nil),     // 32: api.gateway.v1.DeviceTypeGetRes
	(*DeviceTypeUpdateReq)(nil),  // 33: api.gateway.v1.DeviceTypeUpdateReq
	(*DeviceTypeDeleteReq)(nil),  // 34: api.gateway.v1.DeviceTypeDeleteReq
	(*UserDeviceCreateReq)(nil),  // 35: api.gateway.v1.UserDeviceCreateReq
	(*UserDeviceGetReq)(nil),     // 36: api.gateway.v1.UserDeviceGetReq
	(*UserDevice)(nil),           // 37: api.gateway.v1.UserDevice
	(*UserDeviceGetRes)(nil),     // 38: api.gateway.v1.UserDeviceGetRes
	(*UserDeviceDeleteReq)(nil),  // 39: api.gateway.v1.UserDeviceDeleteReq
	(*common.DeviceData)(nil),    // 40: common.DeviceData
}
var file_api_gateway_v1_manager_proto_depIdxs = []int32{
	0,  // 0: api.gateway.v1.LoginRes.user:type_name -> api.gateway.v1.User
	0,  // 1: api.gateway.v1.UserGetRes.user:type_name -> api.gateway.v1.User
	9,  // 2: api.gateway.v1.RoleGetRes.role:type_name -> api.gateway.v1.Role
	15, // 3: api.gateway.v1.ApiGetRes.api:type_name -> api.gateway.v1.Api
	22, // 4: api.gateway.v1.DeviceGetRes.device:type_name -> api.gateway.v1.Device
	40, // 5: api.gateway.v1.DeviceDataReceiveReq.data:type_name -> common.DeviceData
	29, // 6: api.gateway.v1.DeviceTypeGetRes.deviceType:type_name -> api.gateway.v1.DeviceType
	37, // 7: api.gateway.v1.UserDeviceGetRes.userDevice:type_name -> api.gateway.v1.UserDevice
	1,  // 8: api.gateway.v1.Manager.Login:input_type -> api.gateway.v1.LoginReq
	3,  // 9: api.gateway.v1.Manager.UserRegister:input_type -> api.gateway.v1.UserRegisterReq
	4,  // 10: api.gateway.v1.Manager.UserGet:input_type -> api.gateway.v1.UserGetReq
	6,  // 11: api.gateway.v1.Manager.UserUpdate:input_type -> api.gateway.v1.UserUpdateReq
	7,  // 12: api.gateway.v1.Manager.ResetPassword:input_type -> api.gateway.v1.ResetPasswordReq
	8,  // 13: api.gateway.v1.Manager.UserDelete:input_type -> api.gateway.v1.UserDeleteReq
	10, // 14: api.gateway.v1.Manager.RoleCreate:input_type -> api.gateway.v1.RoleCreateReq
	11, // 15: api.gateway.v1.Manager.RoleGet:input_type -> api.gateway.v1.RoleGetReq
	13, // 16: api.gateway.v1.Manager.RoleUpdate:input_type -> api.gateway.v1.RoleUpdateReq
	14, // 17: api.gateway.v1.Manager.RoleDelete:input_type -> api.gateway.v1.RoleDeleteReq
	16, // 18: api.gateway.v1.Manager.ApiCreate:input_type -> api.gateway.v1.ApiCreateReq
	17, // 19: api.gateway.v1.Manager.ApiGet:input_type -> api.gateway.v1.ApiGetReq
	19, // 20: api.gateway.v1.Manager.ApiUpdate:input_type -> api.gateway.v1.ApiUpdateReq
	20, // 21: api.gateway.v1.Manager.ApiDelete:input_type -> api.gateway.v1.ApiDeleteReq
	35, // 22: api.gateway.v1.Manager.UserDeviceCreate:input_type -> api.gateway.v1.UserDeviceCreateReq
	36, // 23: api.gateway.v1.Manager.UserDeviceGet:input_type -> api.gateway.v1.UserDeviceGetReq
	39, // 24: api.gateway.v1.Manager.UserDeviceDelete:input_type -> api.gateway.v1.UserDeviceDeleteReq
	23, // 25: api.gateway.v1.Manager.DeviceCreate:input_type -> api.gateway.v1.DeviceCreateReq
	24, // 26: api.gateway.v1.Manager.DeviceGet:input_type -> api.gateway.v1.DeviceGetReq
	26, // 27: api.gateway.v1.Manager.DeviceUpdate:input_type -> api.gateway.v1.DeviceUpdateReq
	27, // 28: api.gateway.v1.Manager.DeviceDelete:input_type -> api.gateway.v1.DeviceDeleteReq
	28, // 29: api.gateway.v1.Manager.DeviceDataReceive:input_type -> api.gateway.v1.DeviceDataReceiveReq
	30, // 30: api.gateway.v1.Manager.DeviceTypeCreate:input_type -> api.gateway.v1.DeviceTypeCreateReq
	31, // 31: api.gateway.v1.Manager.DeviceTypeGet:input_type -> api.gateway.v1.DeviceTypeGetReq
	33, // 32: api.gateway.v1.Manager.DeviceTypeUpdate:input_type -> api.gateway.v1.DeviceTypeUpdateReq
	34, // 33: api.gateway.v1.Manager.DeviceTypeDelete:input_type -> api.gateway.v1.DeviceTypeDeleteReq
	2,  // 34: api.gateway.v1.Manager.Login:output_type -> api.gateway.v1.LoginRes
	21, // 35: api.gateway.v1.Manager.UserRegister:output_type -> api.gateway.v1.OperationRes
	5,  // 36: api.gateway.v1.Manager.UserGet:output_type -> api.gateway.v1.UserGetRes
	21, // 37: api.gateway.v1.Manager.UserUpdate:output_type -> api.gateway.v1.OperationRes
	21, // 38: api.gateway.v1.Manager.ResetPassword:output_type -> api.gateway.v1.OperationRes
	21, // 39: api.gateway.v1.Manager.UserDelete:output_type -> api.gateway.v1.OperationRes
	21, // 40: api.gateway.v1.Manager.RoleCreate:output_type -> api.gateway.v1.OperationRes
	12, // 41: api.gateway.v1.Manager.RoleGet:output_type -> api.gateway.v1.RoleGetRes
	21, // 42: api.gateway.v1.Manager.RoleUpdate:output_type -> api.gateway.v1.OperationRes
	21, // 43: api.gateway.v1.Manager.RoleDelete:output_type -> api.gateway.v1.OperationRes
	21, // 44: api.gateway.v1.Manager.ApiCreate:output_type -> api.gateway.v1.OperationRes
	18, // 45: api.gateway.v1.Manager.ApiGet:output_type -> api.gateway.v1.ApiGetRes
	21, // 46: api.gateway.v1.Manager.ApiUpdate:output_type -> api.gateway.v1.OperationRes
	21, // 47: api.gateway.v1.Manager.ApiDelete:output_type -> api.gateway.v1.OperationRes
	21, // 48: api.gateway.v1.Manager.UserDeviceCreate:output_type -> api.gateway.v1.OperationRes
	38, // 49: api.gateway.v1.Manager.UserDeviceGet:output_type -> api.gateway.v1.UserDeviceGetRes
	21, // 50: api.gateway.v1.Manager.UserDeviceDelete:output_type -> api.gateway.v1.OperationRes
	21, // 51: api.gateway.v1.Manager.DeviceCreate:output_type -> api.gateway.v1.OperationRes
	25, // 52: api.gateway.v1.Manager.DeviceGet:output_type -> api.gateway.v1.DeviceGetRes
	21, // 53: api.gateway.v1.Manager.DeviceUpdate:output_type -> api.gateway.v1.OperationRes
	21, // 54: api.gateway.v1.Manager.DeviceDelete:output_type -> api.gateway.v1.OperationRes
	21, // 55: api.gateway.v1.Manager.DeviceDataReceive:output_type -> api.gateway.v1.OperationRes
	21, // 56: api.gateway.v1.Manager.DeviceTypeCreate:output_type -> api.gateway.v1.OperationRes
	32, // 57: api.gateway.v1.Manager.DeviceTypeGet:output_type -> api.gateway.v1.DeviceTypeGetRes
	21, // 58: api.gateway.v1.Manager.DeviceTypeUpdate:output_type -> api.gateway.v1.OperationRes
	21, // 59: api.gateway.v1.Manager.DeviceTypeDelete:output_type -> api.gateway.v1.OperationRes
	34, // [34:60] is the sub-list for method output_type
	8,  // [8:34] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_gateway_v1_manager_proto_init() }
func file_api_gateway_v1_manager_proto_init() {
	if File_api_gateway_v1_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_gateway_v1_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Api); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceDataReceiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeviceCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeviceGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeviceGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_v1_manager_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeviceDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_gateway_v1_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_gateway_v1_manager_proto_goTypes,
		DependencyIndexes: file_api_gateway_v1_manager_proto_depIdxs,
		MessageInfos:      file_api_gateway_v1_manager_proto_msgTypes,
	}.Build()
	File_api_gateway_v1_manager_proto = out.File
	file_api_gateway_v1_manager_proto_rawDesc = nil
	file_api_gateway_v1_manager_proto_goTypes = nil
	file_api_gateway_v1_manager_proto_depIdxs = nil
}
